1. Provide the list of markets in which customer "Atliq Exclusive" operates its
   business in the APAC region.


SELECT DISTINCT(market) 
FROM gdb023.dim_customer
WHERE customer = "Atliq Exclusive" and region = "APAC";


2. What is the percentage of unique product increase in 2021 vs. 2020? The
   final output contains these fields,
   unique_products_2020,
   unique_products_2021,
   percentage_chg.

SELECT 
    COUNT(DISTINCT CASE WHEN s.fiscal_year = 2020 THEN s.product_code END) AS unique_products_2020,
    COUNT(DISTINCT CASE WHEN s.fiscal_year = 2021 THEN s.product_code END) AS unique_products_2021,
    ((COUNT(DISTINCT CASE WHEN s.fiscal_year = 2021 THEN s.product_code END) - 
      COUNT(DISTINCT CASE WHEN s.fiscal_year = 2020 THEN s.product_code END)) / 
     COUNT(DISTINCT CASE WHEN s.fiscal_year = 2020 THEN s.product_code END)) * 100 AS percentage_change
FROM 
    gdb023.fact_sales_monthly s
WHERE 
    s.fiscal_year IN (2020, 2021);


3. Provide a report with all the unique product counts for each segment and
   sort them in descending order of product counts. The final output contains
   2 fields,
   segment,
   product_count.


SELECT segment, COUNT(DISTINCT(product_code)) AS product_count
FROM gdb023.dim_product
GROUP BY segment
ORDER BY product_count DESC;


4. Follow-up: Which segment had the most increase in unique products in
   2021 vs 2020? The final output contains these fields,
   segment,
   product_count_2020,
   product_count_2021,
   difference.


SELECT 
    p.segment, 
    COUNT(DISTINCT CASE WHEN s.fiscal_year = 2020 THEN s.product_code END) AS product_count_2020,
    COUNT(DISTINCT CASE WHEN s.fiscal_year = 2021 THEN s.product_code END) AS product_count_2021,
    (COUNT(DISTINCT CASE WHEN s.fiscal_year = 2021 THEN s.product_code END) - 
     COUNT(DISTINCT CASE WHEN s.fiscal_year = 2020 THEN s.product_code END)) AS Difference
FROM 
    gdb023.dim_product p
INNER JOIN 
    gdb023.fact_sales_monthly s ON p.product_code = s.product_code
WHERE 
    s.fiscal_year IN (2020, 2021)
GROUP BY 
    p.segment
ORDER BY 
    Difference DESC;


5. Get the products that have the highest and lowest manufacturing costs.
   The final output should contain these fields,
   product_code,
   product,
   manufacturing_cost.


(SELECT m.product_code, p.product, max(m.manufacturing_cost) as manufacturing_cost
FROM gdb023.dim_product p
INNER JOIN gdb023.fact_manufacturing_cost m
ON p.product_code = m.product_code
GROUP BY m.product_code, p.product
ORDER BY manufacturing_cost DESC
LIMIT 1 )

UNION ALL

(SELECT m.product_code, p.product, min(m.manufacturing_cost) as manufacturing_cost
FROM gdb023.dim_product p
INNER JOIN gdb023.fact_manufacturing_cost m
ON p.product_code = m.product_code
GROUP BY m.product_code, p.product
ORDER BY manufacturing_cost ASC
LIMIT 1)


6. Generate a report which contains the top 5 customers who received an
   average high pre_invoice_discount_pct for the fiscal year 2021 and in the
   Indian market. The final output contains these fields,
   customer_code,
   customer,
   average_discount_percentage.


SELECT c.customer_code, c.customer, ROUND(avg(f.pre_invoice_discount_pct),4) AS Avg_discount
FROM gdb023.dim_customer c 
INNER JOIN gdb023.fact_pre_invoice_deductions f 
ON c.customer_code = f.customer_code
WHERE f.fiscal_year = 2021 AND c.market = "India"
GROUP BY c.customer_code, c.customer
ORDER BY Avg_discount DESC
LIMIT 5;


7.Get the complete report of the Gross sales amount for the customer “Atliq
  Exclusive” for each month. This analysis helps to get an idea of low and
  high-performing months and take strategic decisions.
  The final report contains these columns:
  Month,
  Year,
  Gross sales Amount.


SELECT monthname(s.date) as Month, s.fiscal_year AS Year,
SUM((s.sold_quantity * g.gross_price)) AS gross_sales_Amount
FROM gdb023.fact_gross_price g  
INNER JOIN gdb023.fact_sales_monthly s
ON s.product_code = g.product_code
INNER JOIN gdb023.dim_customer c
ON c.customer_code = s.customer_code
WHERE c.customer = "Atliq Exclusive"
GROUP BY Month, Year;


8. In which quarter of 2020, got the maximum total_sold_quantity? The final
   output contains these fields sorted by the total_sold_quantity,
   Quarter,
   total_sold_quantity.


SELECT CONCAT("Q" , CEIL((MONTH(adddate(s.date, INTERVAL 4 MONTH)) / 3))) AS Quarter, 
SUM(s.sold_quantity) AS Total_sold_quantity
FROM gdb023.fact_sales_monthly s
WHERE s.fiscal_year = 2020
GROUP BY Quarter;



9. Which channel helped to bring more gross sales in the fiscal year 2021
   and the percentage of contribution? The final output contains these fields,
   channel,
   gross_sales_mln,
   percentage.


with cte1 as(
SELECT c.channel, SUM((s.sold_quantity * g.gross_price)) AS gross_sales_mln
FROM gdb023.dim_customer c 
INNER JOIN gdb023.fact_sales_monthly s
ON c.customer_code = s.customer_code
INNER JOIN gdb023.fact_gross_price g 
ON s.product_code = g.product_code
WHERE s.fiscal_year = 2021
GROUP BY c.channel),

cte2 as (
SELECT cte1.*, ROUND((cte1.gross_sales_mln / (SELECT SUM(gross_sales_mln) FROM cte1)) * 100,2)  as percentage
FROM cte1)

SELECT cte2.* FROM cte2;


10. Get the Top 3 products in each division that have a high
    total_sold_quantity in the fiscal_year 2021? The final output contains these
    fields,
    division,
    product_code,
    product,
    total_sold_quantity,
    rank_order.


with cte1 as(
SELECT p.division , p.product_code,
p.product, SUM(s.sold_quantity )as total_sold_quantity
FROM gdb023.dim_product p
INNER JOIN gdb023.fact_sales_monthly s 
ON p.product_code = s.product_code
WHERE s.fiscal_year = 2021
GROUP BY p.division, p.product_code, p.product
ORDER BY total_sold_quantity DESC),

cte2 as(
SELECT cte1.*, 
RANK() OVER(PARTITION BY cte1.division ORDER BY cte1.total_sold_quantity DESC) AS rank_order
FROM cte1)

SELECT cte2.* FROM cte2 
WHERE cte2.rank_order <= 3;


